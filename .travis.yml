branches:
  # don't attempt to build branches intented for windows builds
  except:
    - /.*win.*/

os: linux
dist: trusty
language: generic

before_install:
    # Install Miniconda.
    - echo `pwd`
    - |
      echo ""
      echo "Installing a fresh version of Miniconda."
      MINICONDA_URL="https://repo.continuum.io/miniconda"
      MINICONDA_FILE="Miniconda3-latest-Linux-x86_64.sh"
      curl -L -O "${MINICONDA_URL}/${MINICONDA_FILE}"
      bash $MINICONDA_FILE -b

    # Configure conda.
    - |
      echo ""
      echo "Configuring conda."
      source /home/travis/miniconda3/bin/activate root
      conda config --remove channels defaults
      conda config --add channels defaults
      conda config --add channels conda-forge
      conda config --set show_channel_urls true

install:
  - |
    conda install -y \
      jinja2 \
      pygit2 \
      click \
      ruamel.yaml \
      setuptools_scm \
      github3.py \
      python-gnupg

script:
  # fetch all branches of crossbow
  - git config remote.origin.fetch +refs/heads/*:refs/remotes/origin/*

  # clone arrow
  - pushd ..
  - git clone -b ARROW-2724 https://github.com/kszucs/arrow

  # submit packaging tasks
  - |
    if [ $TRAVIS_EVENT_TYPE = "cron" ]; then
      python arrow/dev/tasks/crossbow.py submit \
        conda-linux \
        conda-win \
        conda-osx \
        wheel-linux \
        wheel-win \
        wheel-osx \
        linux-packages
    else
      python arrow/dev/tasks/crossbow.py submit --dry-run \
        conda-linux \
        conda-win \
        conda-osx \
        wheel-linux \
        wheel-win \
        wheel-osx \
        linux-packages
    fi
